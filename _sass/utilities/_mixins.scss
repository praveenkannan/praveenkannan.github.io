// Mixins for reusable code patterns

// Media query mixins
@mixin for-small-screens {
  @media (max-width: $breakpoint-small) {
    @content;
  }
}

@mixin for-medium-screens {
  @media (max-width: $breakpoint-medium) {
    @content;
  }
}

@mixin for-large-screens {
  @media (max-width: $breakpoint-large) {
    @content;
  }
}

// Flexbox mixins
@mixin flex($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

// Grid mixins
@mixin grid($columns: 1fr, $gap: $spacing-unit) {
  display: grid;
  grid-template-columns: $columns;
  gap: $gap;
}

// Typography mixins
@mixin heading($size: 1.5rem, $weight: $font-weight-normal, $margin-bottom: 1rem) {
  font-size: $size;
  font-weight: $weight;
  margin-bottom: $margin-bottom;
  line-height: 1.3;
}

// Animation mixins
@mixin transition($property: all, $duration: $transition-speed, $timing: $transition-ease) {
  transition: $property $duration $timing;
}

// Box shadow mixins
@mixin shadow($level: 1) {
  @if $level == 1 {
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  } @else if $level == 2 {
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  } @else if $level == 3 {
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
  }
}

// Border radius mixins
@mixin rounded($radius: $border-radius) {
  border-radius: $radius;
}

// Truncate text with ellipsis
@mixin truncate($width: 100%) {
  max-width: $width;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

// Clearfix
@mixin clearfix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

// Visually hide an element but keep it accessible to screen readers
@mixin visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}
